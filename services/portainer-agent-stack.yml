version: "3.2"

networks:
  agent_network:
    driver: overlay
    attachable: true
  traefik_swarm:
    external: true

volumes:
  portainer_data:
    driver: local
    driver_opts:
      type: "nfs"
      o: addr=10.0.20.30,nolock,soft,rw
      device: ":/volume1/swarm/portainer/data"

services:
  agent:
    image: portainer/agent:latest
    environment:
      AGENT_CLUSTER_ADDR: tasks.agent
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /var/lib/docker/volumes:/var/lib/docker/volumes
    networks:
      - agent_network
    logging:
      driver: loki:latest
      options:
        loki-url: "http://logging.richardsoper.me:3100/loki/api/v1/push"
    deploy:
      mode: global
      placement:
        constraints: [node.platform.os == linux]

  portainer:
    image: portainer/portainer-ce:latest
    command: -H tcp://tasks.agent:9001 --tlsskipverify
    ports:
      - "9000:9000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data
    networks:
      - agent_network
      - traefik_swarm
    logging:
      driver: loki:latest
      options:
        loki-url: "http://logging.richardsoper.me:3100/loki/api/v1/push"
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints: [node.role == manager]
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.portainer.entrypoints=websecure"
        - "traefik.http.routers.portainer.rule=Host(`portainer.richardsoper.me`)"
        - "traefik.http.routers.portainer.tls.certresolver=cf-cert"
        - "traefik.http.services.portainer.loadbalancer.server.port=9000"
