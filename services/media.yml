version: "3.2"

networks:
  traefik_swarm:
    external: true
  service_network:
    driver: overlay
    attachable: true

volumes:
  jellyfin_config:
    driver: local
    driver_opts:
      type: "nfs"
      o: addr=192.168.33.32,nolock,soft,rw
      device: ":/volume1/swarm/jellyfin/config"
  jellyfin_media:
    driver: local
    driver_opts:
      type: "nfs"
      o: addr=192.168.33.32,nolock,soft,rw
      device: ":/volume1/swarm/media_data"
  jellyfin_cache:
    driver: local
    driver_opts:
      type: "nfs"
      o: addr=192.168.33.32,nolock,soft,rw
      device: ":/volume1/swarm/jellyfin/cache"
  radarr_data:
    driver: local
    driver_opts:
      type: "nfs"
      o: addr=192.168.33.32,nolock,soft,rw
      device: ":/volume1/swarm/radarr"
  jackett_data:
    driver: local
    driver_opts:
      type: "nfs"
      o: addr=192.168.33.32,nolock,soft,rw
      device: ":/volume1/swarm/jackett"
  sonarr_data:
    driver: local
    driver_opts:
      type: "nfs"
      o: addr=192.168.33.32,nolock,soft,rw
      device: ":/volume1/swarm/sonarr"
  media_data:
    driver: local
    driver_opts:
      type: "nfs"
      o: addr=192.168.33.32,nolock,soft,rw
      device: ":/volume1/swarm/media_data"

services:
  jellyfin:
    image: ghcr.io/linuxserver/jellyfin:version-10.7.6-1
    environment:
      - PUID=1028
      - PGID=1028
      - JELLYFIN_PublishedServerUrl=https://watch.richardsoper.me
    volumes:
      - jellyfin_config:/config
      - jellyfin_media:/media
      - jellyfin_cache:/cache
    networks:
      - traefik_swarm
    logging:
      driver: loki:latest
      options:
        loki-url: "http://logging.richardsoper.me:3100/loki/api/v1/push"
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.platform.arch == x86_64
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.jellyfin.entrypoints=websecure"
        - "traefik.http.routers.jellyfin.rule=Host(`watch.richardsoper.me`)"
        - "traefik.http.routers.jellyfin.tls.certresolver=cf-cert"
        - "traefik.http.services.jellyfin.loadbalancer.server.port=8096"

  radarr:
    image: linuxserver/radarr:version-3.2.2.5080
    environment:
      - PUID=1028
      - PGID=1028
      - TZ=America/Los_Angeles
    volumes:
      - radarr_data:/config
      - media_data:/data
      - "/etc/localtime:/etc/localtime:ro"
    networks:
      - traefik_swarm
      - service_network
    logging:
      driver: loki:latest
      options:
        loki-url: "http://logging.richardsoper.me:3100/loki/api/v1/push"
    deploy:
      mode: replicated
      replicas: 1
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.radarr.entrypoints=websecure"
        - "traefik.http.routers.radarr.rule=Host(`movies.richardsoper.me`)"
        - "traefik.http.routers.radarr.tls.certresolver=cf-cert"
        - "traefik.http.routers.radarr.middlewares=secure-headers@file,authelia@docker"
        - "traefik.http.services.radarr.loadbalancer.server.port=7878"

  jackett:
    image: linuxserver/jackett:version-v0.18.641
    environment:
      - PUID=1028
      - PGID=1028
      - TZ=America/Los_Angeles
    volumes:
      - jackett_data:/config
      - media_data:/data
      - "/etc/localtime:/etc/localtime:ro"
    networks:
      - traefik_swarm
      - service_network
    logging:
      driver: loki:latest
      options:
        loki-url: "http://logging.richardsoper.me:3100/loki/api/v1/push"
    deploy:
      mode: replicated
      replicas: 1
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.jackett.entrypoints=websecure"
        - "traefik.http.routers.jackett.rule=Host(`jackett.richardsoper.me`)"
        - "traefik.http.routers.jackett.tls.certresolver=cf-cert"
        - "traefik.http.routers.jackett.middlewares=secure-headers@file,authelia@docker"
        - "traefik.http.services.jackett.loadbalancer.server.port=9117"

  sonarr:
    image: linuxserver/sonarr:version-3.0.6.1342
    environment:
      - PUID=1028
      - PGID=1028
      - TZ=America/Los_Angeles
    volumes:
      - sonarr_data:/config
      - media_data:/data
      - "/etc/localtime:/etc/localtime:ro"
    networks:
      - traefik_swarm
      - service_network
    logging:
      driver: loki:latest
      options:
        loki-url: "http://logging.richardsoper.me:3100/loki/api/v1/push"
    deploy:
      mode: replicated
      replicas: 1
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.sonarr.entrypoints=websecure"
        - "traefik.http.routers.sonarr.rule=Host(`tv.richardsoper.me`)"
        - "traefik.http.routers.sonarr.tls.certresolver=cf-cert"
        - "traefik.http.routers.sonarr.middlewares=secure-headers@file,authelia@docker"
        - "traefik.http.services.sonarr.loadbalancer.server.port=8989"

  solverr:
    image: ghcr.io/flaresolverr/flaresolverr:latest
    environment:
      - LOG_LEVEL=info
    networks:
      - service_network
    logging:
      driver: loki:latest
      options:
        loki-url: "http://logging.richardsoper.me:3100/loki/api/v1/push"
    deploy:
      mode: replicated
      replicas: 1
