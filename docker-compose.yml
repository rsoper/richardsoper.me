version: "3.7"

secrets:
  cf_api_email:
    file: "./secrets/cf_api_email.secret"
  cf_api_key:
    file: "./secrets/cf_api_key.secret"
  mysql_root_password:
    external: true

services:
  # Traefik 2.0 reverse proxy with sub-domain configuration

  traefik:
    hostname: traefik
    image: traefik:v2.2
    restart: always
    environment:
      - CF_API_EMAIL_FILE=/run/secrets/cf_api_email
      - CF_API_KEY_FILE=/run/secrets/cf_api_key
    ports:
      - "80:80"
      - "443:443"
      - "8008:8008"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:rw
      - traefik_data:/etc/traefik
      - shared_data:/shared
    networks:
      - traefik_proxy
    deploy:
      mode: global
      placement:
        constraints: [node.role == manager]
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.traefik.rule=Host(`traefik.richardsoper.me`)"
        - "traefik.http.services.traefik.loadbalancer.server.port=8080"
        - "traefik.http.routers.traefik.service=api@internal"
        ## Secure dashboard with basic authentication
        - "traefik.http.routers.traefik.middlewares=traefik-auth"
        - "traefik.http.middlewares.traefik-auth.basicauth.usersfile=/shared/.htpasswd"
        ## DNS CHALLENGE
        - "traefik.http.routers.traefik.tls.certresolver=cf-cert"
        - "traefik.http.routers.traefik.tls.domains[0].main=*.richardsoper.me"
        - "traefik.http.routers.traefik.tls.domains[0].sans=richardsoper.me"
        ## HTTP REDIRECT
        - "traefik.http.routers.redirect-https.rule=hostregexp(`{host:.+}`)"
        - "traefik.http.routers.redirect-https.entrypoints=web"
        - "traefik.http.routers.redirect-https.middlewares=secure-redirect@file"

  # Wordpress - This acts as the TLD.

  # wordpress:
  #   hostname: wordpress
  #   image: wordpress:latest
  #   restart: always
  #   depends_on:
  #     - mariadb
  #   environment:
  #     WORDPRESS_DB_HOST: mariadb
  #     WORDPRESS_DB_USER: wordpress
  #     WORDPRESS_DB_PASSWORD: ${WORDPRESSPW}
  #     WORDPRESS_DB_NAME: wordpress
  #   volumes:
  #     - ${DOCKERDIR}/wordpress:/var/www/html
  #   labels:
  #     - "traefik.enable=true"
  #     - "traefik.http.routers.wordpress.entrypoints=websecure"
  #     - "traefik.http.routers.wordpress.rule=Host(`www.richardsoper.me`) || Host(`richardsoper.me`)"
  #     - "traefik.http.routers.wordpress.tls.certresolver=cf-cert"
  #     - "traefik.http.services.wordpress.loadbalancer.server.port=80"
  #   networks:
  #     - traefik_proxy

  # # Ghost - This is the blog subdomain

  # ghost:
  #   image: ghost:latest
  #   restart: always
  #   env_file:
  #     - ${DOCKERDIR}/ghost.env
  #   depends_on:
  #     - mariadb
  #   labels:
  #     - "traefik.enable=true"
  #     - "traefik.http.routers.ghost.entrypoints=websecure"
  #     - "traefik.http.routers.ghost.rule=Host(`blog.richardsoper.me`)"
  #     - "traefik.http.routers.ghost.tls.certresolver=cf-cert"
  #     - "traefik.http.services.ghost.loadbalancer.server.port=2368"
  #   volumes:
  #     - ghost_data:/var/lib/ghost/content
  #   networks:
  #     - traefik_proxy
  #   deploy:
  #     replicas: 2

  # # Nextcloud - Personal cloud storage

  # nextcloud:
  #   image: nextcloud:latest
  #   restart: always
  #   depends_on:
  #     - mariadb
  #   ports:
  #     - "8000:80"
  #   labels:
  #     - "traefik.enable=true"
  #     - "traefik.http.routers.nextcloud.entrypoints=websecure"
  #     - "traefik.http.routers.nextcloud.rule=Host(`cloud.richardsoper.me`)"
  #     - "traefik.http.routers.nextcloud.tls.certresolver=cf-cert"
  #     - "traefik.http.services.nextcloud.loadbalancer.server.port=80"
  #     ## Headers - Not sure if needed
  #     - "traefik.http.middlewares.nextcloud.headers.customFrameOptionsValue=SAMEORIGIN"
  #     - "traefik.http.middlewares.nextcloud.headers.framedeny=true"
  #     - "traefik.http.middlewares.nextcloud.headers.sslredirect=true"
  #     - "traefik.http.middlewares.nextcloud.headers.stsIncludeSubdomains=true"
  #     - "traefik.http.middlewares.nextcloud.headers.stsPreload=true"
  #     - "traefik.http.middlewares.nextcloud.headers.stsSeconds=15552000"

  #   volumes:
  #     - ${DOCKERDIR}/nextcloud:/var/www/html
  #   networks:
  #     - traefik_proxy

  # # Self hosted Git repository

  # gitea:
  #   image: webhippie/gitea:latest
  #   environment:
  #     - GITEA_DATABASE_TYPE=mysql
  #     - GITEA_DATABASE_HOST=mariadb:3306
  #     - GITEA_DATABASE_NAME=gitea
  #     - GITEA_DATABASE_USERNAME=gitea
  #     - GITEA_DATABASE_PASSWORD=${GITPASS}
  #     - GITEA_SERVER_ROOT_URL=https://git.richardsoper.me
  #   restart: always
  #   depends_on:
  #     - mariadb
  #   ports:
  #     - "3000:3000"
  #     - "2222:22"
  #   labels:
  #     - "traefik.enable=true"
  #     - "traefik.http.routers.gitea.entrypoints=websecure"
  #     - "traefik.http.routers.gitea.rule=Host(`git.richardsoper.me`)"
  #     - "traefik.http.routers.gitea.tls.certresolver=cf-cert"
  #     - "traefik.http.services.gitea.loadbalancer.server.port=3000"
  #   volumes:
  #     - ${DOCKERDIR}/gitea:/data
  #   networks:
  #     - traefik_proxy

  # Homeassistant - Connecting more homekit things

  homeassistant:
    container_name: home-assistant
    image: homeassistant/home-assistant:0.110.3
    volumes:
      - ${DOCKERDIR}/homeassistant:/config
    environment:
      - TZ=America/Los_Angeles
    restart: always
    network_mode: host

  # Portainer - Remote access to docker containers via web UI

  portainer:
    container_name: portainer
    image: portainer/portainer-ce:latest
    restart: always
    depends_on:
      - traefik
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data
    command: -H unix:///var/run/docker.sock
    networks:
      - traefik_proxy
    deploy:
      replicas: 1
      placement:
        constraints: [node.role == manager]
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.portainer.entrypoints=websecure"
        - "traefik.http.routers.portainer.rule=Host(`portainer.richardsoper.me`)"
        - "traefik.http.routers.portainer.tls.certresolver=cf-cert"
        - "traefik.http.services.portainer.loadbalancer.server.port=9000"

  # # PHPmyadmin - Manage the database via web UI
  # phpmyadmin:
  #   image: jackgruber/phpmyadmin:latest
  #   restart: always
  #   depends_on:
  #     - mariadb
  #   environment:
  #     - PMA_HOST=mariadb:3306
  #     - PMA_ABSOLUTE_URL=https://db.richardsoper.me/
  #   networks:
  #     - traefik_proxy
  #   deploy:
  #     replicas: 1
  #     placement:
  #       constraints: [node.role == manager]
  #     labels:
  #       - "traefik.enable=true"
  #       - "traefik.http.routers.phpmyadmin.entrypoints=websecure"
  #       - "traefik.http.routers.phpmyadmin.rule=Host(`db.richardsoper.me`)"
  #       - "traefik.http.routers.phpmyadmin.tls.certresolver=cf-cert"
  #       - "traefik.http.services.phpmyadmin.loadbalancer.server.port=80"

  # Adminer - lightweight alternative to PMA
  adminer:
    image: adminer:latest
    restart: always
    depends_on:
      - mariadb
    ports:
      - "9001:8080"
    networks:
      - traefik_proxy
    deploy:
      replicas: 1
      placement:
        constraints: [node.role == manager]
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.adminer.entrypoints=websecure"
        - "traefik.http.routers.adminer.rule=Host(`db.richardsoper.me`)"
        - "traefik.http.routers.adminer.tls.certresolver=cf-cert"
        - "traefik.http.services.adminer.loadbalancer.server.port=9001"

  # MariaDB - Open sourced relational database. MySQL equivalent.

  mariadb:
    container_name: mariadb
    hostname: mariadb
    image: linuxserver/mariadb:110.4.14mariabionic-ls80
    restart: always
    depends_on:
      - traefik
    volumes:
      - mariadb_data:/config
    ports:
      - "3306:3306"
    secrets:
      - mysql_root_password
    environment:
      - FILE__MYSQL_ROOT_PASSWORD=/run/secrets/mysql_root_password
      - TZ=America/Los_Angeles
    networks:
      - traefik_proxy
    deploy:
      replicas: 1
      placement:
        constraints: [node.role == manager]

  # Watch Tower - Automatically update containers.

  watchtower:
    container_name: watchtower
    image: containrrr/watchtower:latest
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /etc/timezone:/etc/timezone:ro
    command: --cleanup --interval 86400

networks:
  traefik_proxy:
    external: true

volumes:
  shared_data:
    driver: local
    driver_opts:
      type: "nfs"
      o: addr=10.0.20.30,nolock,soft,rw
      device: ":/richardsoper/shared"
  traefik_data:
    driver: local
    driver_opts:
      type: "nfs"
      o: addr=10.0.20.30,nolock,soft,rw
      device: ":/richardsoper/traefik"
  ghost_data:
    driver: local
    driver_opts:
      type: "nfs"
      o: addr=10.0.20.30,nolock,soft,rw
      device: ":/richardsoper/ghost"
  portainer_data:
    driver: local
    driver_opts:
      type: "nfs"
      o: addr=10.0.20.30,nolock,soft,rw
      device: ":/richardsoper/portainer/data"
  mariadb_data:
    driver: local
    driver_opts:
      type: "nfs"
      o: addr=10.0.20.30,nolock,soft,rw
      device: ":/richardsoper/mariadb"
